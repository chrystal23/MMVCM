% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MMVCM.R
\name{MMVCM}
\alias{MMVCM}
\title{Multi-dimensional multi-threshold varying coefficient model (MMVCM)}
\usage{
MMVCM(
  tin,
  yin,
  xin,
  zin,
  win = NULL,
  zeta = NULL,
  bw.seq1 = NULL,
  bw.seq2 = NULL,
  kernel = c("epan", "rect", "gauss", "gausvar", "quar"),
  NbGrid = 101,
  nRegGrid = 101,
  kFolds = 5,
  npoly = 1,
  nder = 0,
  hkappa = 2,
  Refine = T,
  refine_tol = 1e-04,
  refine_maxiter = 10,
  verbose = T
)
}
\arguments{
\item{tin}{A matrix containing the observed values of the index variables. Each column corresponds to one index variable.}

\item{yin}{A vector containing the observed values of the response.}

\item{xin}{A matrix containing the observed values of the covariates with varying coefficients. Each column corresponds to one covariate.}

\item{zin}{A matrix containing the observed values of the covariates with linear (non-varying) coefficients. Each column corresponds to one covariate.}

\item{win}{A vector of weights for each observation. If win = NULL (Default), equal weights will be assigned.}

\item{zeta}{The threshold value for change point (jump) detection. If zeta = NULL (Default), the threshold function will be calculated based on theoretical results.}

\item{bw.seq1}{A vector containing the candidate values for bandwidth selection in Part 1 (for h_1). If bw.seq1 = NULL (Default), the candidate values will be generated based on theoretical results.}

\item{bw.seq2}{A vector containing the candidate values for bandwidth selection in Part 2 (for h_tau, h_d, and h_2). If bw.seq2 = NULL (Default), the candidate values will be generated based on theoretical results.}

\item{kernel}{The smoothing kernel used for estimation, including "epan" (Default, the Epanechnikov kernel), "rect", "gauss", "gausvar", and "quar".}

\item{NbGrid}{The number of grid points used for jump detection in each index dimension. Default is 101.}

\item{nRegGrid}{The number of grid points to generate output estimation, mainly for plotting purpose. Default is 101.}

\item{kFolds}{The number of folds for bandwidth cross validation selection. Default is 5.}

\item{npoly}{The degree of polynomial. Default is 1 for local linear smoothing.}

\item{nder}{The order of derivative, which should be smaller than npoly. Default is 0 for local linear smoothing.}

\item{hkappa}{A numeric value (> 1) for neighborhood width adjustment in jump detection to avoid repeated identification of the same jump. Default is 2.}

\item{Refine}{A boolean indicating whether to perform the Refining Stage (iterative refining) in jump detection.}

\item{refine_tol}{The tolerance value for the Refining Stage. Default is 1e-4.}

\item{refine_maxiter}{The maximum number of iterations allowed in the Refining Stage. Default is 10.}

\item{verbose}{A boolean indicating whether to output more information during function execution.}
}
\value{
A list containing the following fields: 
\item{beta_hat}{A vector of estimated linear coefficients.}
\item{alp_est}{A list of estimated varying coefficient functions, including detected change point locations (jumptime), estimated jump sizes (jumpsize), and the estimated coefficient function values on the inputs (alp.hat)}
\item{yhat}{A vector of estimated response given the input.}
\item{mse}{The mean squared error of response.}
\item{tuning_parameters}{The tuning parameters selected for our MMVCM method, including h_1, h_tau, h_d, h_2, zeta, and rho_d.}
}
\description{
Jump detection and coefficient estimation for the multi-dimensional multi-threshold varying coefficient model, which can have an unkown number of multi-dimensional jumps.
}
\examples{
data(syn_data_2d)
res_2d <- MMVCM(tin = tin, yin = yin, xin = xin, zin = zin)

}
