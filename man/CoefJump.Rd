% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SVCJP.R
\name{CoefJump}
\alias{CoefJump}
\title{Varying coefficient model with jump points}
\usage{
CoefJump(
  tin,
  yin,
  xin,
  win = NULL,
  tout = NULL,
  xout = NULL,
  h_tau,
  h_d,
  h_2,
  zeta,
  kernel = c("epan", "rect", "gauss", "gausvar", "quar"),
  NbGrid = 101,
  npoly = 1,
  nder = 0,
  hkappa = 2,
  Refine = F,
  refine_tol = 1e-04,
  refine_maxiter = 10,
  jumpcheck = T,
  verbose = T
)
}
\arguments{
\item{tin}{A matrix containing the observed values of the index variables. Each column corresponds to one index variable.}

\item{yin}{A vector containing the observed values of the response.}

\item{xin}{A matrix containing the observed values of the covariates. Each column corresponds to one covariate.}

\item{win}{A vector of weights for each observation. If win = NULL (Default), equal weights will be assigned.}

\item{tout}{A matrix containing the testing values of the index variables. Default is NULL.}

\item{xout}{A matrix containing the testing values of the covariates. Default is NULL.}

\item{h_tau}{The bandwidth for jump location estimation.}

\item{h_d}{The bandwidth for jump size estimation.}

\item{h_2}{The bandwidth for local kernel smoothing.}

\item{zeta}{The threshold value for change point (jump) detection. If zeta = NULL (Default), the threshold function will be calculated based on theoretical results.}

\item{kernel}{The smoothing kernel used for estimation, including "epan" (Default, the Epanechnikov kernel), "rect", "gauss", "gausvar", and "quar".}

\item{NbGrid}{The number of grid points used for jump detection in each index dimension. Default is 101.}

\item{npoly}{The degree of polynomial. Default is 1 for local linear smoothing.}

\item{nder}{The order of derivative, which should be smaller than npoly. Default is 0 for local linear smoothing.}

\item{hkappa}{A numeric value (> 1) for neighborhood width adjustment in jump detection to avoid repeated identification of the same jump. Default is 2.}

\item{Refine}{A boolean indicating whether to perform the Refining Stage (iterative refining) in jump detection.}

\item{refine_tol}{The tolerance value for the Refining Stage. Default is 1e-4.}

\item{refine_maxiter}{The maximum number of iterations allowed in the Refining Stage. Default is 10.}

\item{jumpcheck}{A boolean indicating whether to double check if the sizes of detected jumps are above the threshold value (zeta).}

\item{verbose}{A boolean indicating whether to output more information during function execution.}
}
\value{
A list containing the tuning parameters used (h_tau, h_d, h_2, zeta, and rho_d) and the following fields: 
\item{alp_est}{A list of estimated varying coefficient functions, including detected change point locations (jumptime), estimated jump sizes (jumpsize), and the estimated coefficient function values on the inputs (alp.hat)}
\item{muout}{A vector of predicted response for the testing data (tout, xout).}
}
\description{
Jump detection and coefficient estimation for the varying coefficient model with jump points with given tuning parameters.
}
